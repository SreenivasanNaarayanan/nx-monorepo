name: CI
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  contents: 'write'
  actions: 'write'
jobs:
  publish-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          scope: '@sreeni1312'
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci
      - run: git config --global user.name "sreeni"
      - run: git config --global user.email "sreeni.san1312@gmail.com"
#      - run: git remote set-url origin https://SreenivasanNaarayanan:$GITHUB_AUTH_TOKEN@github.com/SreenivasanNaarayanan/nx-monorepo.git
#        env:
#          GITHUB_AUTH_TOKEN:  ${{ secrets.AUTH_TOKEN }}
      - run: npx lerna version --yes --conventional-commits
        env:
          GH_TOKEN: ${{ secrets.AUTH_TOKEN }}
      - run: npm config set registry https://registry.npmjs.org/
      - run: npm config set access public
      - name: Setup npm
        run: |
          echo //registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN} >> .npmrc
          npm whoami
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npx lerna publish from-git --yes --no-private
  set-affected:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set-affected-matrix.outputs.affected}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - id: set-affected-matrix
        run: |
          AFFECTED_PACKAGES=npx nx print-affected --target=build
          node scripts/get-affected-apps.js $AFFECTED_PACKAGES
          echo "projects=$(cat affectedPackages.txt)" >> $GITHUB_OUTPUT
  deploy-packages:
    needs: set-affected
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJSON(needs.set-affected.outputs.projects) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - run: echo ${{ matrix.project }}
